name: CI & Deploy
on:
  push:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin
      - name: Build & push web
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/diagpilote-web:latest -f backend/Dockerfile backend
          docker push ghcr.io/${{ github.repository_owner }}/diagpilote-web:latest
      - name: Build & push worker
        if: hashFiles('worker/Dockerfile') != ''
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/diagpilote-worker:latest -f worker/Dockerfile worker
          docker push ghcr.io/${{ github.repository_owner }}/diagpilote-worker:latest
      - name: Build & push scheduler
        if: hashFiles('scheduler/Dockerfile') != ''
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/diagpilote-scheduler:latest -f scheduler/Dockerfile scheduler
          docker push ghcr.io/${{ github.repository_owner }}/diagpilote-scheduler:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: SSH deploy (pull + up -d)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            set -e
            cd ${{ secrets.DEPLOY_PATH }}
            docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" -p "${{ secrets.GHCR_TOKEN }}"
            docker compose -f docker-compose.yml -f docker-compose.override.yml pull || true
            docker compose -f docker-compose.yml -f docker-compose.override.yml up -d
            docker image prune -f || true
            docker compose ps
