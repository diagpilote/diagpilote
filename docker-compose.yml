
services:
  nginx:
    image: nginx:1.27
    container_name: diagpilote-nginx
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
    restart: unless-stopped
  web:
    container_name: diagpilote-web
    build: ./backend
    command: "bash -lc 'exec gunicorn --chdir /app --pythonpath /app -w 2 -k gthread --threads 4 -b 0.0.0.0:8000 app.app:app'"
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://127.0.0.1:8000/health',timeout=3).getcode()==200 else sys.exit(1)"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    expose:
      - "8000"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/diagpilote
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      - db
      - redis
    restart: unless-stopped
  worker:
    container_name: diagpilote-worker
    build: ./backend
    working_dir: /app
    command: bash -lc 'PYTHONPATH=/app exec python3 -u -m app.worker'
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/diagpilote
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      - db
      - redis
    restart: unless-stopped

  scheduler:
    container_name: diagpilote-scheduler
    build: ./backend
    working_dir: /app
    command: bash -lc 'PYTHONPATH=/app exec python3 -u -m app.scheduler'
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/diagpilote
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      - db
      - redis
    restart: unless-stopped
  db:
    image: postgres:15
    container_name: diagpilote-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: diagpilote
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: diagpilote-redis
    command: ["redis-server", "--appendonly", "yes"]
    restart: unless-stopped

  certbot:
    image: certbot/certbot:v2.8.0
    container_name: diagpilote-certbot
    volumes:
      - /var/www/certbot:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    entrypoint: ["sh","-c","trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h; done"]
    restart: unless-stopped

volumes:
  db_data:
